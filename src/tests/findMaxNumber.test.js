/*
Задача №2: Тестирование функции поиска максимального числа
Описание задачи:
Представь, что ты работаешь над проектом, где требуется реализовать функцию findMaxNumber,
которая находит максимальное число в переданном массиве целых чисел. Функция должна обрабатывать различные сценарии,
включая пустые массивы, массивы с одинаковыми элементами и массивы с отрицательными числами.

// findMaxNumber.js
export function findMaxNumber(numbers) {
  if (!numbers || !numbers.length) {
    return undefined;
  }

  return Math.max(...numbers);
}

Входящие данные:
Массивы могут содержать целые числа разного знака, а также нули.
Возможно получение пустых массивов.
Ожидаемые результаты:
Функция должна возвращать максимальное число в массиве.
Пустой массив должен вернуть undefined.
Массив с одинаковыми элементами должен вернуть одно из этих элементов.

Пример входных данных и ожидаемого результата:
Input: [1, 2, 3]
Output: 3

Input: [-1, 0, 1]
Output: 1

Input: [5, 5, 5]
Output: 5

Input: []
Output: undefined

*/

import { describe, expect, it } from 'vitest';
import { findMaxNumber } from '../tasks/findMaxNumber';

describe('Находит максимальное число в массиве', () => {
  describe('Положительные значения', () => {
    it('Возвращает максимальное число в массиве положительных чисел', () => {
      expect(findMaxNumber([1, 2, 3])).toBe(3);
    });
  });

  describe('Отрицательные значения', () => {
    it('Возвращает максимальное число в массиве отрицательных чисел', () => {
      expect(findMaxNumber([-1, -2, -3])).toBe(-1);
    });
  });

  describe('Смешанные значения', () => {
    it('Возвращает максимальное число в массиве положительных и отрицательных чисел', () => {
      expect(findMaxNumber([-1, 0, 1])).toBe(1);
    });
  });

  describe('Одинаковые значения', () => {
    it('Возвращает максимальное число в массиве одинаковых чисел', () => {
      expect(findMaxNumber([5, 5, 5])).toBe(5);
    });
  });

  describe('Пустой массив', () => {
    it('Возвращает undefined, когда массив пустой', () => {
      expect(findMaxNumber([])).toBe(undefined);
    });
  });

  describe('Один элемент в массиве', () => {
    it('Возвращает единственное значение', () => {
      expect(findMaxNumber([42])).toBe(42);
    });
  });

  describe('Числа с плавающей точкой', () => {
    it('Возвращает максимальное число в массиве чисел с плавающей точкой', () => {
      expect(findMaxNumber([1.5, 2.5, 3.5])).toBe(3.5);
    });
  });
});
